# Generated by Django 3.0.4 on 2020-04-15 22:29

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("eventsourcing", "0001_initial"),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="timestampsequencedrecord", name="position_idx",
        ),
        migrations.AlterField(
            model_name="entitysnapshotrecord",
            name="application_name",
            field=models.CharField(help_text="Application name.", max_length=32),
        ),
        migrations.AlterField(
            model_name="entitysnapshotrecord",
            name="originator_id",
            field=models.UUIDField(
                help_text="Originator ID (e.g. an entity or aggregate ID)."
            ),
        ),
        migrations.AlterField(
            model_name="entitysnapshotrecord",
            name="originator_version",
            field=models.BigIntegerField(
                help_text="Originator version of item in sequence."
            ),
        ),
        migrations.AlterField(
            model_name="entitysnapshotrecord",
            name="state",
            field=models.BinaryField(
                help_text="State of the item (serialized dict, possibly encrypted)."
            ),
        ),
        migrations.AlterField(
            model_name="entitysnapshotrecord",
            name="topic",
            field=models.TextField(
                help_text="Topic of the item (e.g. path to domain event class)."
            ),
        ),
        migrations.AlterField(
            model_name="integersequencedrecord",
            name="position",
            field=models.BigIntegerField(
                help_text="Position (index) of item in sequence."
            ),
        ),
        migrations.AlterField(
            model_name="integersequencedrecord",
            name="sequence_id",
            field=models.UUIDField(
                help_text="Sequence ID (e.g. an entity or aggregate ID)."
            ),
        ),
        migrations.AlterField(
            model_name="integersequencedrecord",
            name="state",
            field=models.BinaryField(
                help_text="State of the item (serialized dict, possibly encrypted)."
            ),
        ),
        migrations.AlterField(
            model_name="integersequencedrecord",
            name="topic",
            field=models.TextField(
                help_text="Topic of the item (e.g. path to domain event class)."
            ),
        ),
        migrations.AlterField(
            model_name="notificationtrackingrecord",
            name="application_name",
            field=models.CharField(help_text="Application name.", max_length=32),
        ),
        migrations.AlterField(
            model_name="notificationtrackingrecord",
            name="notification_id",
            field=models.BigIntegerField(help_text="Notification ID."),
        ),
        migrations.AlterField(
            model_name="notificationtrackingrecord",
            name="pipeline_id",
            field=models.IntegerField(help_text="Pipeline ID."),
        ),
        migrations.AlterField(
            model_name="notificationtrackingrecord",
            name="uid",
            field=models.BigAutoField(
                help_text="Position (timestamp) of item in sequence.",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="notificationtrackingrecord",
            name="upstream_application_name",
            field=models.CharField(
                help_text="Upstream application name.", max_length=32
            ),
        ),
        migrations.AlterField(
            model_name="snapshotrecord",
            name="position",
            field=models.BigIntegerField(
                help_text="Position (index) of item in sequence."
            ),
        ),
        migrations.AlterField(
            model_name="snapshotrecord",
            name="sequence_id",
            field=models.UUIDField(
                help_text="Sequence ID (e.g. an entity or aggregate ID)."
            ),
        ),
        migrations.AlterField(
            model_name="snapshotrecord",
            name="state",
            field=models.BinaryField(
                help_text="State of the item (serialized dict, possibly encrypted)."
            ),
        ),
        migrations.AlterField(
            model_name="snapshotrecord",
            name="topic",
            field=models.TextField(
                help_text="Topic of the item (e.g. path to domain event class)."
            ),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="application_name",
            field=models.CharField(help_text="Application name.", max_length=32),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="causal_dependencies",
            field=models.TextField(help_text="Causal dependencies."),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="notification_id",
            field=models.BigIntegerField(help_text="Notification ID."),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="originator_id",
            field=models.UUIDField(
                help_text="Originator ID (e.g. an entity or aggregate ID)."
            ),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="originator_version",
            field=models.BigIntegerField(
                help_text="Originator version of item in sequence."
            ),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="pipeline_id",
            field=models.IntegerField(help_text="Pipeline ID."),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="state",
            field=models.BinaryField(
                help_text="State of the item (serialized dict, possibly encrypted)."
            ),
        ),
        migrations.AlterField(
            model_name="storedeventrecord",
            name="topic",
            field=models.TextField(
                help_text="Topic of the item (e.g. path to domain event class)."
            ),
        ),
        migrations.AlterField(
            model_name="timestampsequencedrecord",
            name="position",
            field=models.DecimalField(
                db_index=True,
                decimal_places=6,
                help_text="Position (timestamp) of item in sequence.",
                max_digits=24,
            ),
        ),
        migrations.AlterField(
            model_name="timestampsequencedrecord",
            name="sequence_id",
            field=models.UUIDField(
                help_text="Sequence ID (e.g. an entity or aggregate ID)."
            ),
        ),
        migrations.AlterField(
            model_name="timestampsequencedrecord",
            name="state",
            field=models.BinaryField(
                help_text="State of the item (serialized dict, possibly encrypted)."
            ),
        ),
        migrations.AlterField(
            model_name="timestampsequencedrecord",
            name="topic",
            field=models.TextField(
                help_text="Topic of the item (e.g. path to domain event class)."
            ),
        ),
        migrations.AlterModelTable(name="entitysnapshotrecord", table=None,),
        migrations.AlterModelTable(name="integersequencedrecord", table=None,),
        migrations.AlterModelTable(name="notificationtrackingrecord", table=None,),
        migrations.AlterModelTable(name="snapshotrecord", table=None,),
        migrations.AlterModelTable(name="storedeventrecord", table=None,),
        migrations.AlterModelTable(name="timestampsequencedrecord", table=None,),
    ]


# Output of `sqlmigrate eventsourcing 0002` command:
# BEGIN;
# --
# -- Create model EntitySnapshotRecord
# --
# CREATE TABLE "entity_snapshots" ("uid" bigserial NOT NULL PRIMARY KEY, "application_name" varchar(32) NOT NULL, "originator_id" uuid NOT NULL, "originator_version" bigint NOT NULL, "topic" text NOT NULL, "state" bytea NOT NULL);
# --
# -- Create model IntegerSequencedRecord
# --
# CREATE TABLE "integer_sequenced_items" ("id" bigserial NOT NULL PRIMARY KEY, "sequence_id" uuid NOT NULL, "position" bigint NOT NULL, "topic" text NOT NULL, "state" bytea NOT NULL);
# --
# -- Create model NotificationTrackingRecord
# --
# CREATE TABLE "notification_tracking" ("uid" bigserial NOT NULL PRIMARY KEY, "application_name" varchar(32) NOT NULL, "upstream_application_name" varchar(32) NOT NULL, "pipeline_id" integer NOT NULL, "notification_id" bigint NOT NULL);
# --
# -- Create model SnapshotRecord
# --
# CREATE TABLE "snapshots" ("uid" bigserial NOT NULL PRIMARY KEY, "sequence_id" uuid NOT NULL, "position" bigint NOT NULL, "topic" text NOT NULL, "state" bytea NOT NULL);
# --
# -- Create model StoredEventRecord
# --
# CREATE TABLE "stored_events" ("uid" bigserial NOT NULL PRIMARY KEY, "application_name" varchar(32) NOT NULL, "originator_id" uuid NOT NULL, "originator_version" bigint NOT NULL, "pipeline_id" integer NOT NULL, "notification_id" bigint NOT NULL, "topic" text NOT NULL, "state" bytea NOT NULL, "causal_dependencies" text NOT NULL);
# --
# -- Create model TimestampSequencedRecord
# --
# CREATE TABLE "timestamp_sequenced_items" ("id" bigserial NOT NULL PRIMARY KEY, "sequence_id" uuid NOT NULL, "position" numeric(24, 6) NOT NULL, "topic" text NOT NULL, "state" bytea NOT NULL);
# --
# -- Create index position_idx on field(s) position of model timestampsequencedrecord
# --
# CREATE INDEX "position_idx" ON "timestamp_sequenced_items" ("position");
# --
# -- Alter unique_together for timestampsequencedrecord (1 constraint(s))
# --
# ALTER TABLE "timestamp_sequenced_items" ADD CONSTRAINT "timestamp_sequenced_items_sequence_id_position_cf4cd24c_uniq" UNIQUE ("sequence_id", "position");
# --
# -- Alter unique_together for storedeventrecord (2 constraint(s))
# --
# ALTER TABLE "stored_events" ADD CONSTRAINT "stored_events_application_name_pipelin_0efc025f_uniq" UNIQUE ("application_name", "pipeline_id", "notification_id");
# ALTER TABLE "stored_events" ADD CONSTRAINT "stored_events_application_name_origina_65aeaa8e_uniq" UNIQUE ("application_name", "originator_id", "originator_version");
# --
# -- Alter unique_together for snapshotrecord (1 constraint(s))
# --
# ALTER TABLE "snapshots" ADD CONSTRAINT "snapshots_sequence_id_position_a228c0bf_uniq" UNIQUE ("sequence_id", "position");
# --
# -- Alter unique_together for notificationtrackingrecord (1 constraint(s))
# --
# ALTER TABLE "notification_tracking" ADD CONSTRAINT "notification_tracking_application_name_upstrea_38d9be02_uniq" UNIQUE ("application_name", "upstream_application_name", "pipeline_id", "notification_id");
# --
# -- Alter unique_together for integersequencedrecord (1 constraint(s))
# --
# ALTER TABLE "integer_sequenced_items" ADD CONSTRAINT "integer_sequenced_items_sequence_id_position_9b66d1a7_uniq" UNIQUE ("sequence_id", "position");
# --
# -- Alter unique_together for entitysnapshotrecord (1 constraint(s))
# --
# ALTER TABLE "entity_snapshots" ADD CONSTRAINT "entity_snapshots_application_name_origina_450bfcd1_uniq" UNIQUE ("application_name", "originator_id", "originator_version");
# COMMIT;
